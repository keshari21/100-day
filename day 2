/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
    struct ListNode* dummy = (struct ListNode*)malloc(sizeof(struct ListNode));
    dummy->val = -1;
    dummy->next = NULL;
    struct ListNode* curr = dummy;
    int carr = 0;

    while (l1 != NULL || l2 != NULL) {
        int x = l1 == NULL ? 0 : l1->val;
        int y = l2 == NULL ? 0 : l2->val;
        // Calculate the sum of the two numbers at the corresponding position + carry
        int sum = x + y + carr;	
        // Calculate the carry value
        carr = sum / 10;
        // Insert the data using the linked list's tail insertion method
        curr->next = (struct ListNode*)malloc(sizeof(struct ListNode));
        curr->next->val = sum % 10;
        curr->next->next = NULL;
        curr = curr->next;

        if (l1 != NULL) {
            l1 = l1->next;
        }
        if (l2 != NULL) {
            l2 = l2->next;
        }
    }
    if (carr != 0) {
        curr->next = (struct ListNode*)malloc(sizeof(struct ListNode));
        curr->next->val = carr;
        curr->next->next = NULL;
    }

    return dummy->next;
}

